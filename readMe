아래는 제공하신 drawRack 및 drawColumn 함수의 상세한 분석입니다:

drawRack 함수
이 함수는 창고의 각 레인 안에 있는 랙(상자)을 그립니다. 랙은 격자 형태로 정렬되며, 각 랙은 여러 층(floor)으로 구성될 수 있습니다.

매개변수:

floor: 랙의 총 층 수를 나타냅니다.
size: 상자의 크기입니다.
index: 현재 상자의 인덱스로, 상자가 레인 안에서 몇 번째 위치에 있는지를 결정합니다.
extra: 상자에 관련된 추가 정보를 포함하는 객체입니다.
depthStart: 상자가 위치할 Z축의 시작 지점입니다.
depthEnd: 상자가 위치할 Z축의 끝 지점입니다.
lane: 상자가 위치할 레인 번호입니다.
상자의 윤곽선을 그리는 부분:

상자의 윤곽선을 그리기 위해 THREE.LineBasicMaterial과 THREE.BufferGeometry를 사용합니다. 각 상자의 윤곽선은 빨간색(0xff0000)으로 설정되어 있습니다.
상자의 메쉬를 생성하는 부분:

각 층마다 THREE.BoxGeometry를 사용하여 상자의 메쉬(3D 객체)를 생성합니다. 상자의 색은 녹색(0x00ff00)으로 설정되어 있습니다.
상자의 위치 설정:

cube.position.x: 상자의 X축 위치를 설정합니다. 인덱스와 크기를 사용하여 레인 안에서 상자의 위치를 결정합니다.
cube.position.y: 상자의 Y축 위치를 설정합니다. 상자가 쌓이는 높이에 따라 조정됩니다.
cube.position.z: 상자의 Z축 위치를 설정합니다. depthStart에 1을 더해 중앙에 위치하게 합니다.
상자의 메타데이터 설정:

cube.userData.extra: 상자에 관한 추가 정보를 저장합니다.
cube.userData.actualFloor: 상자가 몇 번째 층에 위치하는지를 저장합니다.
cube.userData.lane: 상자가 어느 레인에 속하는지를 저장합니다.
최종적으로, 상자를 씬에 추가합니다.

drawColumn 함수
이 함수는 레인 안의 각 칼럼에 대한 랙을 그립니다.

매개변수:

col: 칼럼 안의 랙들의 배열입니다.
colIndex: 현재 칼럼의 인덱스입니다.
curLane: 현재 레인 번호입니다.
size: 상자의 크기입니다.
laneRack: 현재 칼럼의 Z축 시작 및 끝 지점을 배열로 포함합니다.
colCode: 칼럼의 코드입니다.
lane: 현재 레인 번호입니다.
작업 흐름:

먼저, drawColumnText를 호출하여 칼럼에 대한 텍스트를 그립니다.
각 칼럼에 대한 랙을 그리기 위해 반복문을 사용합니다.
반복문 내에서 drawRack을 호출하여 개별 랙을 그립니다. 각 랙은 칼럼 내에서의 인덱스와 Z축의 위치 정보를 바탕으로 그려집니다.
이 함수들은 함께 창고의 레이아웃을 생성하는 데 사용됩니다. 랙과 칼럼을 통해 복잡한 창고 시스템을 시각화하고 사용자가 창고 내의 특정 랙을 쉽게 식별하고 관리할 수 있도록 돕습니다.
